{"version":3,"sources":["services/number.js","App.js","index.js"],"names":["baseUrl","numberService","getAll","axios","get","then","res","data","add","newObject","put","update","id","remove","delete","Notification","name","message","type","className","Input","text","value","handleChange","htmlFor","onChange","Form","inputs","handleSubmit","heading","submitText","onSubmit","map","input","i","PhoneNumber","number","clickHandler","onClick","PhoneNumbers","phonenumbers","person","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setFilter","notificationName","setNotificationName","notificationMessage","setNotificationMessage","notificationType","setNotificationType","notify","setTimeout","updateAll","numbers","useEffect","updatePerson","updated","_person","catch","err","response","error","peopleToShow","toLowerCase","includes","event","target","preventDefault","personObject","trim","presentPerson","find","concat","window","confirm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc2a7a1e.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  let request = axios.get(baseUrl)\n  return request.then((res) => res.data)\n}\n\nconst add = (newObject) => {\n  let request = axios.put(baseUrl, newObject)\n  return request.then((res) => res.data)\n}\n\nconst update = (id, newObject) => {\n  let request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then((res) => res.data)\n}\n\nconst remove = (id) => {\n  let request = axios.delete(`${baseUrl}/${id}`)\n  return request.then((res) => res.data)\n}\n\nconst numberService = {\n  getAll,\n  add,\n  update,\n  remove\n}\n\nexport default numberService\n","import React, { useState, useEffect } from 'react'\nimport numberService from './services/number'\n\nconst Notification = ({ name, message, type }) => {\n  return (\n    <div className={`notification ${type}`}>\n      <span className=\"name\">{name}</span>\n      {message && <span className=\"message\">{message}</span>}\n    </div>\n  )\n}\n\nconst Input = ({ id, text, value, handleChange, type }) => {\n  return (\n    <tr>\n      <td>\n        <label htmlFor={id}>\n          <span>{text}</span>\n        </label>\n      </td>\n      <td>\n        <input id={id} type={type} value={value} onChange={handleChange} />\n      </td>\n    </tr>\n  )\n}\n\nconst Form = ({ inputs, handleSubmit, heading, submitText }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2>{heading}</h2>\n      <table>\n        <tbody>\n          {inputs.map((input, i) => (\n            <Input\n              key={input.text + i}\n              id={input.text + i}\n              type={input.type}\n              text={input.text}\n              value={input.value}\n              handleChange={input.handleChange}\n            />\n          ))}\n        </tbody>\n      </table>\n\n      {handleSubmit && <button type=\"submit\">{submitText}</button>}\n    </form>\n  )\n}\n\nconst PhoneNumber = ({ name, number, id, clickHandler }) => {\n  return (\n    <tr>\n      <td>{name}</td>\n      <td>{number}</td>\n      <td>\n        <button onClick={() => clickHandler(id)}>Remove</button>\n      </td>\n    </tr>\n  )\n}\n\nconst PhoneNumbers = ({ phonenumbers, clickHandler }) => {\n  return (\n    <table>\n      <tbody>\n        {phonenumbers.map((person) => (\n          <PhoneNumber\n            name={person.name}\n            number={person.number}\n            id={person.id}\n            key={person.name}\n            clickHandler={clickHandler}\n          />\n        ))}\n      </tbody>\n    </table>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [notificationName, setNotificationName] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState('')\n  const [notificationType, setNotificationType] = useState('')\n\n  const notify = ({ name, message, type }) => {\n    setNotificationMessage(message)\n    setNotificationName(name)\n    setNotificationType(type)\n    setTimeout(() => {\n      setNotificationMessage(null)\n      setNotificationName(null)\n      setNotificationType(null)\n    }, 5000)\n  }\n\n  const isPresent = (name) => persons.find((person) => person.name === name)\n\n  const updateAll = () => {\n    numberService.getAll().then((numbers) => {\n      setPersons(numbers)\n    })\n  }\n\n  useEffect(() => {\n    updateAll()\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const personObject = {\n      name: newName.trim(),\n      number: newNumber.trim()\n    }\n\n    let presentPerson = isPresent(newName)\n\n    if (presentPerson) return updatePerson(presentPerson, personObject)\n\n    numberService\n      .add(personObject)\n      .then((numbers) => {\n        setPersons(persons.concat(numbers))\n        notify({\n          name: `Added a number for ' ${newName} '`,\n          type: `success`\n        })\n        setNewName('')\n        setNewNumber('')\n      })\n      .catch((err) => {\n        notify({\n          name: `Failed to add info for ' ${newName} '`,\n          message: err?.response?.data?.error,\n          type: `error`\n        })\n        updateAll()\n      })\n  }\n\n  const updatePerson = (person, newObject) => {\n    numberService\n      .update(person.id, newObject)\n      .then((updated) => {\n        setPersons(persons.map((_person) => (_person.id === person.id ? updated : _person)))\n        notify({\n          name: `Updated number for ' ${person.name} '`,\n          type: `success`\n        })\n        setNewName('')\n        setNewNumber('')\n      })\n      .catch((err) => {\n        notify({\n          name: `Failed to update info for ' ${person.name} '`,\n          message: err?.response?.data?.error,\n          type: `error`\n        })\n        updateAll()\n      })\n  }\n\n  const deletePerson = (id) => {\n    let person = persons.find((person) => person.id === id)\n    if (!window.confirm('Do you really want to remove the person from phonebook?')) return\n    numberService\n      .remove(id)\n      .then(() => {\n        notify({\n          name: `Removed number for ' ${person.name} '`,\n          type: `success`\n        })\n        updateAll()\n      })\n      .catch((err) => {\n        notify({\n          name: `Failed to delete data for ' ${person.name} '`,\n          message: err?.response?.data?.error,\n          type: `error`\n        })\n        updateAll()\n      })\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value.toLowerCase())\n  }\n\n  const peopleToShow = filter ? persons.filter((person) => person.name.toLowerCase().includes(filter)) : persons\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification name={notificationName} message={notificationMessage} type={notificationType} />\n      <Form\n        heading=\"Filter\"\n        inputs={[{ type: 'text', text: 'filter shown with', value: filter, handleChange: handleFilterChange }]}\n      />\n      <Form\n        heading=\"Add new\"\n        handleSubmit={addPerson}\n        submitText=\"add\"\n        inputs={[\n          { type: 'text', text: 'name:', value: newName, handleChange: handleNameChange },\n          { type: 'tel', text: 'number:', value: newNumber, handleChange: handleNumberChange }\n        ]}\n      />\n      <h2>Numbers</h2>\n      <PhoneNumbers phonenumbers={peopleToShow} clickHandler={deletePerson} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}